% filename StoreResults003.Rnw 

 
In this chapter we see how we can save our results, both graphical and numerical, in files for later use. I find it useful to be able to generate tables and figures for documents as individual files because I use the \LaTeX{} system for typesetting documents. I like the advantage this approach has because it means I do not need to sift through larger documents to delete or repair old tables and figures if data is updated or errors in my working are found. In fact the document you are reading is prepared in exactly this way. All tables and figures generated by \R{} were stored as separate files for later use. 
 
This chapter is not about saving data. If you want to know how to save your data for sharing or storing then you need Chapter~\ref{ExportData} on exporting data. 
 
This chapter also assumes you already know how to create a graph. 
 
\section{Copying and pasting graphs} 
 
OK you can do it if you must. If you are using a word processor then this is the simplest way to get a graph into your document. You need to go through all the steps again if the figure turns out to be substandard in some way so watch what you're doing! 
 
\R{} will open a new window if required, or a pane in the existing graph window for each graph created, regardless of the mode you choose to run \R{}. The menus offer the choice of copying the current window to the clipboard and indicate the hot-key for doing this. You can then place the graph in your word processed document where you want it by pasting it as required. 
 
\section{Saving a graph using the menus} 
 
\R{} does give the user a range of options for saving graphs within the pull down menus. You should choose the file type that best suits your needs. The problem with this way of saving graphs, and the copy and paste approach, is that it is labour intensive. When it comes time to develop a program that will generate lots of graphs, you will want to have them saved automatically. 
 
\section{Saving a graph using commands within your \R{} program} 
 
There are several ways to save a graph created within your \R{} program. I offer one suggestion that I think provides some degree of flexibility, especially if you need to change the file type for some reason. First of all, recall that \R{} will open a new graph window if necessary or add a new graph to the existing graph window device. I make sure that I close all graph windows immediately after creating and saving them in my \R{} scripts. To close a graph window we use the \Rcmd{dev.off} command. This keeps things tidy and means we don't have lots of graph windows to worry about. Opening graphs is a slightly different story. 
 
For a basic graph such as a histogram where the default size of the window suits my purposes, I use the \Rcmd{x11} command to open a new graph window; we'll see how to change this soon. I then create my graph as required and save it using the \Rcmd{savePlot} command. Providing an example now seems appropriate.  
 
The following code will result in a graph similar to that given in Exhibit~\ref{HistStandNormRandValues} --- similar because random data are used and you will get something slightly different.\begin{exhibit} 
\begin{center} 
\caption{Histogram of 10,000 random numbers drawn from a standard normal distribution. \label{HistStandNormRandValues}} 
\includegraphics[width=10cm]{figures/StoreResultsHistRand10000Z-1} 
\SVGLink{StoreResultsHistRand10000Z-1} 
\end{center} 
\end{exhibit} 
