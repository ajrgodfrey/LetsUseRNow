
This chapter explains how to find solutions to several problems in Operations Research. More specifically, they are problems in Linear Programming (LP) and Integer Programming (IP) where the solution is found as the optimal value of an objective function subject to the existence of various constraints, all of which are expressed as linear functions. The difference between LP and IP is the possible values for the decision variables under consideration.

To benefit the most from this chapter, you ought to be familiar with basic manipulation of vectors and matrices, as seen in Chapter~\ref{Algebra}  and be ready to install an additional package using the methods outlined in Chapter~\ref{Additional}. You will need to install the \Rpkg{lpSolve} package and make sure it is ready for use by calling the \Rcmd{require} command as seen in the examples in this chapter. Note that this need only be done once, but the command is repeated as a reminder.

Note that all examples are intentionally made reproducible through use of random number generation. You will need to make sure you reset the random number generator's seed value using the \Rcmd{set.seed} commands that appear in the examples.


\section{The Assignment Problem}

The assignment problem assigns $n$ tasks to $n$ people. The objective function is often described in tabular or matrix form as a set of costs to be minimised. The constraints are that all tasks must be assigned and no person can complete more than one task. ``Dummy" tasks or people are added to the matrix if the number of tasks is not equal to the number of people. 

The mathematical programming representation for the assignment problem has the objective function:\begin{equation}\label{OperResAssObj}
\min{ \sum_{i=1}^n {\sum_{j=1}^n {c_{ij}x_{ij}}}} \qquad i,j=1,\ldots,n
\end{equation}
subject to the constraints:
\begin{eqnarray*}
\sum_{j=1}^n {x_{ij}} &=1, \quad \forall  i=1,\ldots,n\\
\sum_{i=1}^n {x_{ij}} &=1, \quad \forall j=1,\ldots,n\\
x_{ij} &\in \{0,1\} \quad \forall i,j\\
\end{eqnarray*}
